import{c as r}from"./notificiation.DyHDLNjw.js";import{B as d}from"./endpoints.QH1VciTq.js";import{k as c}from"./index.B9b1t7QR.js";import{a as p}from"./index.CViUNx8d.js";const n=`${d}/api/products`;let l=[];const s=p(l),i=async e=>{if(console.log(e),e.response){const o=await e.response.json();r({title:"Ups! Hubo un error",description:o.error,type:"error"})}else r({title:"Ups! Hubo un error",description:"No se pudo conectar con el servidor. Por favor, revisa tu conexión.",type:"error"})},u=async e=>{try{const o=await c.post(n,{json:e,credentials:"include"}).json();s.set(s.get().concat(o)),r({title:"Producto creado!",type:"success"})}catch(o){if(o.name==="HTTPError"&&o.response.status>=400){const t=await o.response.json();r({title:"Ups! Hubo un error",description:t.error,type:"error"})}else r({title:"Producto creado!",description:"El producto se creó con éxito, pero la conexión se perdió. Recarga la página para verlo.",type:"success"}),console.log("Error de conexión inesperado, pero el producto se creó con éxito:",o)}},y=async e=>{const o=`${n}/${e}`;try{const t=await c.delete(o,{credentials:"include"}).json();s.set(s.get().filter(a=>a.id!==t.id)),r({title:"Producto eliminado",description:`${t.name}`,type:"success"})}catch(t){i(t)}},m=async e=>{const o=`${n}/${e.id}`;try{const t=await c.put(o,{json:e,credentials:"include"}).json();s.set(s.get().map(a=>a.id===t.id?t:a)),r({title:"Producto actualizado",description:`${t.name}`,type:"success"})}catch(t){i(t)}},P=async()=>{try{const o=(await c.get(n,{credentials:"include"}).json()).map(t=>({...t,price:parseFloat(t.price),price_bs:parseFloat(t.price_bs)}));s.set(o)}catch(e){e.response&&(e.response.status===401||e.response.status===403)&&location.replace("/login"),i(e)}},g=p(0),f=async()=>{try{const e=`${d}/api/dolar/rate`,o=await c.get(e).json();console.log("Respuesta de la API del dólar:",o),g.set(o.promedio)}catch(e){i(e)}},h={addProduct:u,removeProduct:y,updateProduct:m,getProducts:P,getDolarRate:f};export{h as P,g as d,s as p};
