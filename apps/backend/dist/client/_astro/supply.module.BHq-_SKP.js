import{c as t}from"./notificiation.DyHDLNjw.js";import{B as p}from"./endpoints.QH1VciTq.js";import{k as a}from"./index.B9b1t7QR.js";import{a as l}from"./index.CViUNx8d.js";const c=`${p}/api/supply`;let u=[];const r=l(u),i=async e=>{if(console.log(e),e.response){const s=await e.response.json();t({title:"Ups! Hubo un error",description:s.error,type:"error"})}else t({title:"Ups! Hubo un error",description:"No se pudo conectar con el servidor. Por favor, revisa tu conexión.",type:"error"})},d=async e=>{try{const s=await a.post(c,{json:e,credentials:"include"}).json();r.set(r.get().concat(s)),t({title:"Insumo creado!",type:"success"})}catch(s){if(s.name==="HTTPError"&&s.response.status>=400){const o=await s.response.json();t({title:"Ups! Hubo un error",description:o.error,type:"error"})}else t({title:"Insumo creado!",description:"El insumo se creó con éxito, pero la conexión se perdió. Recarga la página para verlo.",type:"success"}),console.log("Error de conexión inesperado, pero el insumo se creó con éxito:",s)}},y=async e=>{const s=`${c}/${e}`;try{const o=await a.delete(s,{credentials:"include"}).json();r.set(r.get().filter(n=>n.id!==o.id)),t({title:"Insumo eliminado",description:`${o.name}`,type:"success"})}catch(o){i(o)}},m=async e=>{const s=`${c}/${e.id}`;try{const o=await a.put(s,{json:e,credentials:"include"}).json();r.set(r.get().map(n=>n.id===o.id?o:n)),t({title:"Insumo actualizado",description:`${o.name}`,type:"success"})}catch(o){i(o)}},f=async()=>{try{const s=(await a.get(c,{credentials:"include"}).json()).map(o=>({...o}));r.set(s)}catch(e){e.response&&(e.response.status===401||e.response.status===403)&&location.replace("/login"),i(e)}},w={addSupply:d,removeSupply:y,updateSupply:m,getSupply:f};export{w as S,r as s};
